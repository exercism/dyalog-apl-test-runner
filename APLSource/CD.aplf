 old←force CD new;OS;is64;t;get;lib;chdir;⎕ML ⍝ Current/Change Directory
    ⍝ empty "new": only report; non-empty "new": change dir
    ⍝ warns about tied files with relative tie names if force=0, skips check if force=1
 ⎕ML←1
 OS←3↑⊃# ⎕WG'APLVersion'
 :If 'Win'≡OS                 ⍝ Under Windows we do the association here because we need
     t←'A*'[1+80=⎕DR'']       ⍝ the programs to GET the current directory
     'get'⎕NA'U Kernel32|GetCurrentDirectory',t,' U >0T' ⍝ Associate Get function
     old←2⊃get 260 260                                   ⍝ in all cases we return the current dir
     'chdir'⎕NA'U Kernel32|SetCurrentDirectory',t,' <0T' ⍝ Associate Set function
 :Else
     old←⊃⎕SH'pwd'
 :EndIf

 :If ~0∊⍴new         ⍝ change directory

     :If 'Win'≡OS
             ⍝ chdir returns a single int: 1=ok
         ('Unable to change directory: ',new,': Invalid directory')⎕SIGNAL(chdir⊂new)↓22
     :Else
         :Select OS
         :Case 'AIX'
             is64←32={z←⍵ ⋄ ⎕SIZE'z'}⍬
             lib←'I libc.a(shr',(is64/'_64'),'.o)|chdir <0T1[]'
         :Case 'Lin'
             ⍝ Extract real name of libc that we are actually using
             t←⊃⎕SH'echo $PPID'
             t←⎕SH'ldd /proc/',t,'/exe'
             lib←⊃('^\s*libc\.so\b.*=>\s*(\S*)'⎕S'\1')t
             lib←'I ',lib,'|chdir <0T1[]'
         :Case 'Mac'
             lib←'I /usr/lib/libc.dylib|chdir <0T1[]'
                  ⍝ chdir returns a single integer: 0=ok
         :EndSelect
         ⎕NA lib
         ('Unable to change directory: ',new,': Invalid directory')⎕SIGNAL(0≠chdir⊂new)/22
     :EndIf
 :EndIf
